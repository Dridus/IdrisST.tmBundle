<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>idr</string>
	</array>
	<key>name</key>
	<string>IdrisST</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.idris</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(%\w+)\b.*</string>
			<key>name</key>
			<string>meta.pragma.idris</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.module.idris</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.module.idris</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(module)\s+(.*);?$</string>
			<key>name</key>
			<string>meta.module.idris</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.import.idris</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.import.idris</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(import)\s+(.*);?$</string>
			<key>name</key>
			<string>meta.import.idris</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.import.idris</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric.idris</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>support.function.idris</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(infix[lr]?)\s+(\d+)\s+(.*);?$</string>
			<key>name</key>
			<string>meta.fixity.idris</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#declaration</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>classDeclaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(class)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.class.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(where)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.where.idris</string>
						</dict>
					</dict>
					<key>name</key>
					<string>declaration.class.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>=&gt;</string>
							<key>name</key>
							<string>keyword.arrow.context.idris</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>\)\s+(=&gt;)\s+</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.arrow.context.idris</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.complexContextBound.idris</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>,</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#typeExpr</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.class.idris</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!let|in|data|codata|record|Type|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
(?=.*=&gt;)
</string>
							<key>name</key>
							<string>meta.simpleContextBound.idris</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!let|in|data|codata|record|Type|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
(?!.*=&gt;)
</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.type.idris</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\bwhere\b)</string>
							<key>name</key>
							<string>meta.class.idris</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#typeExpr</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\b(instance)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.instance.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\b(where)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.where.idris</string>
						</dict>
					</dict>
					<key>name</key>
					<string>declaration.instance.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>=&gt;</string>
							<key>name</key>
							<string>keyword.arrow.context.idris</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>end</key>
							<string>\)\s+(=&gt;)\s+</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.arrow.context.idris</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.complexContextBound.idris</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>,</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#typeExpr</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.class.idris</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!let|in|data|codata|record|Type|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
(?=.*=&gt;)
</string>
							<key>name</key>
							<string>meta.simpleContextBound.idris</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!let|in|data|codata|record|Type|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
(?!.*=&gt;)
</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.class.idris</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\bwhere\b)</string>
							<key>name</key>
							<string>meta.class.idris</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#typeExpr</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>--.*$</string>
					<key>name</key>
					<string>comment.line.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|\|\|.*$</string>
					<key>name</key>
					<string>comment.doc.line.idris</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#multilineComment</string>
				</dict>
			</array>
		</dict>
		<key>dataDeclaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b((?:co)?data|record)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.data.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?==|\bwhere\b)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.idris</string>
						</dict>
					</dict>
					<key>name</key>
					<string>declaration.data.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#functionSignature</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!let|in|data|codata|record|Type|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
(?=.*=)
</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>entity.name.type.idris</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?==)</string>
							<key>name</key>
							<string>meta.simpleDataDeclaration.idris</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!let|in|data|codata|record|Type|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
</string>
									<key>name</key>
									<string>variable.type.idris</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>declaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#dataDeclaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#classDeclaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#usingDeclaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#functionSignature</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#termExpr</string>
				</dict>
			</array>
		</dict>
		<key>functionSignature</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!(?:let|in|data|codata|record|Type|if|then|else|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)\b)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
\s*:\s*
</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?x)
(?=$|\)|=|\bwhere\b) # stopExprPattern
</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.where.idris</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.functionSignature.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>{</string>
							<key>end</key>
							<string>}</string>
							<key>name</key>
							<string>meta.implicitParameters.idris</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#typeExpr</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.class.idris</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.type.idris</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.contextarrow.idris</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!(?:let|in|data|codata|record|Type|if|then|else|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)\b)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
(?:
    \s+
    (
        (?:
            \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
          | \b(?!(?:let|in|data|codata|record|Type|if|then|else|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
            |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
            |abstract|implicit|quoteGoal)\b)[a-zA-Z][a-zA-Z0-9_'.]*
        ) # identifierPattern
    )+
)*
\s*(=&gt;)\s*
</string>
							<key>name</key>
							<string>meta.classContext.idris</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typeExpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>multilineComment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>{-</string>
					<key>end</key>
					<string>-}</string>
					<key>name</key>
					<string>comment.multiline.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#multilineComment</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>otherExpr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>={</string>
					<key>end</key>
					<string>}=</string>
					<key>name</key>
					<string>meta.proofBrackets.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#termExpr</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:f?Z|f?S)\b</string>
					<key>name</key>
					<string>constant.numeric.nat.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b([0-9]+|0([xX][0-9a-fA-F]+|[oO][0-7]+))\b</string>
					<key>name</key>
					<string>constant.numeric.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b([0-9]+\.[0-9]+([eE][+-]?[0-9]+)?|[0-9]+[eE][+-]?[0-9]+)\b</string>
					<key>name</key>
					<string>constant.numeric.float.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[\]</string>
					<key>name</key>
					<string>constant.other.color.idris</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$|"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.idris</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\\s+$</string>
							<key>name</key>
							<string>constant.character.escape.gap.idris</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\&amp;</string>
							<key>name</key>
							<string>constant.character.escape.empty.idris</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?x)
\\
(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB
|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\"'\&amp;])
</string>
							<key>name</key>
							<string>constant.character.escape.code.symbolic.idris</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\o[0-7]+|\\x[0-9A-Fa-f]+|\\[0-9]+</string>
							<key>name</key>
							<string>constant.character.escape.octal.idris</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>'</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$|'</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.idris</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.single.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\\s+$</string>
							<key>name</key>
							<string>constant.character.escape.gap.idris</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\&amp;</string>
							<key>name</key>
							<string>constant.character.escape.empty.idris</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?x)
\\
(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB
|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\"'\&amp;])
</string>
							<key>name</key>
							<string>constant.character.escape.code.symbolic.idris</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\\o[0-7]+|\\x[0-9A-Fa-f]+|\\[0-9]+</string>
							<key>name</key>
							<string>constant.character.escape.octal.idris</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;-</string>
					<key>name</key>
					<string>keyword.operator.bind.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?:where|public|total|partial|abstract|public|private|mutual|impossible|if|then|else|do)\b</string>
					<key>name</key>
					<string>keyword.other.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>_\|_</string>
					<key>name</key>
					<string>keyword.bottom.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-&gt;</string>
					<key>name</key>
					<string>keyword.arrow.function.idris</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\\</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.lambda.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?x)
(?=^\S|\)|\bwhere\b) # stopExprPattern
</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>=&gt;</string>
							<key>name</key>
							<string>keyword.arrow.function.idris</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#termExpr</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
(?!(?:::|=&gt;|-&gt;|&lt;-|=|\?=|\|)[^-:!#$%&amp;*+./&lt;=&gt;?@\\^|~])
[-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+
</string>
					<key>name</key>
					<string>keyword.operator.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bType\b</string>
					<key>name</key>
					<string>support.type.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
(?:
    \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
  | \b(?!l(?:et|in|data|codata|record|Type|if|then|else|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
     |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
     |abstract|implicit|quoteGoal)\b)[A-Z][a-zA-Z0-9_'.]*
) # identifierPatternUpper
</string>
					<key>name</key>
					<string>support.type.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
(?:
    \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
  | \b(?!l(?:et|in|data|codata|record|Type|if|then|else|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
     |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
     |abstract|implicit|quoteGoal)\b)[a-zA-Z][a-zA-Z0-9_'.]*
) # identifierPattern
</string>
				</dict>
			</array>
		</dict>
		<key>termExpr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\(\)</string>
					<key>name</key>
					<string>constant.other.color.idris</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#typeAscription</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#termExpr</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>{</string>
					<key>end</key>
					<string>}</string>
					<key>name</key>
					<string>meta.implicitParameters.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!l(?:et|in|data|codata|record|Type|if|then|else|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
         |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
         |abstract|implicit|quoteGoal)\b)[a-z][a-zA-Z0-9_'.]*
    ) # identifierPatternLower
)
</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.type.idris</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=})</string>
							<key>name</key>
							<string>meta.implicitParameterName.idris</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>=</string>
									<key>end</key>
									<string>(?=})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#typeExpr</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#termExpr</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#otherExpr</string>
				</dict>
			</array>
		</dict>
		<key>typeAscription</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?x)
(
    (?:
        \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
      | \b(?!(?:let|in|data|codata|record|Type|if|then|else|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
        |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
        |abstract|implicit|quoteGoal)\b)[a-zA-Z][a-zA-Z0-9_'.]*
    ) # identifierPattern
)
\s*:\s*
</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.other.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?x)
(?=^\S|\)|\bwhere\b) # stopExprPattern
</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.where.idris</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.typeAscription.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#typeExpr</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>typeExpr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)
(?:
    \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
)
</string>
					<key>name</key>
					<string>support.type.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
(?:
    \([-:!#$%&amp;*+./&lt;=&gt;?@\\^|~]+\)
  | \b(?!l(?:et|in|data|codata|record|Type|if|then|else|do|dsl|import|impossible|case|of|total|partial|mutual|infix|infixl|infixr
     |where|with|syntax|proof|postulate|using|namespace|class|instance|parameters|public|private
     |abstract|implicit|quoteGoal)\b)[a-z][a-zA-Z0-9_'.]*
) # identifierPatternLower
</string>
					<key>name</key>
					<string>variable.type.idris</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\(\)</string>
					<key>name</key>
					<string>constant.other.color.idris</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#typeAscription</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typeExpr</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#otherExpr</string>
				</dict>
			</array>
		</dict>
		<key>usingDeclaration</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\b(using)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.using.idris</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.using.idris</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>,</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#typeAscription</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.idris</string>
	<key>uuid</key>
	<string>3ee967d8-23f5-4e5b-8d6a-1008d9e2b0f0</string>
</dict>
</plist>
